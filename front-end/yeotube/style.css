:root {
  /* color */
  --white-color: #ffffff;
  --black-color: #1b1b1b;
  --blue-color: #1976d2;
  --red-color: #ff3d00;
  --grey-light-color: #cfcfcf;
  --grey-dark-color: #707070;

  /* size */
  --padding: 12px;
  --avatar-padding: 36px;

  /* font size */
  --font-large: 18px;
  --font-medium: 14px;
  --font-small: 12px;
  --font-micro: 10px;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  font-family: "Nanum Gothic Coding", monospace;
}

ul {
  /* ul에 있는 바(?)들은 어차피 다 없애줄 것이니 한번에 제거 */
  list-style: none;
}

button, /* 브라우저 자체에서 꾸며주는 버튼의 속성을 제거함 */
button:focus {
  border: none;
  cursor: pointer;
  outline: none;
  background-color: white;
}

/* Header */

header {
  display: flex;
  justify-content: space-between;
  background-color: var(--black-color);
  color: var(--white-color);
  padding: var(--padding);
}

header .t_logo {
  font-size: var(--font-large);
}

header .t_logo i {
  color: var(--red-color);
  justify-items: center;
}

header .t_icon .fa-search {
  margin-right: var(--padding);
}

/* Media */

.y_mdeia {
  /* 좀 더 반응형으로 만들기 위함 */
  position: sticky; /* video에 작성했을 시 작동하지 않았음 */
  top: 0; /* 위치를 지정해 주어야 먹힘. 단위는 px */
  text-align: center; /* 커졌을 때 중간으로 위치시켜줌 */
  background-color: var(--black-color);
}
.y_mdeia video {
  width: 100%; /* 반응형으로 만들기 가장 쉬운 방법 */
  height: 100%; /* %를 사용 하는 것 */
  max-width: 1000px; /* 최대 사이즈를 정해줌으로써 반응형처럼 */
}

/* Content */

.y_content .meta {
  padding: var(--padding);
}

/* Content -- Meta data */
.y_content .meta .hash {
  display: flex;
  color: var(--blue-color);
  font-size: var(--font-small);
}

.y_content .meta .hash li {
  margin-right: var(--padding);
}

.y_content .meta .titleandbutton {
  display: flex;
}

.y_content .meta .titleandbutton .title {
  font-size: var(--font-medium);
  display: -webkit-box; /* 문장이 길때, ...으로 표현하기 위한 방법 */
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2; /* 문장이 몇 줄일때 ... 표현 */
  overflow: hidden; /* 뒤에 글을 숨김 */
  margin-right: var(--padding);
}

.y_content .meta .titleandbutton .morebutton {
  height: 100%; /* 높이가 꽉차게 하여서 버튼을 위로 배치함 */
}

.y_content .meta .views .m_view {
  font-size: var(--font-small);
  color: var(--grey-dark-color);
}

/* action */

.y_content .action {
  display: flex;
  justify-content: space-around;
  margin: var(--padding) 0;
}

.y_content .action button {
  display: flex;
  flex-direction: column;
  font-size: var(--font-small);
}

.y_content .action li i {
  margin: 0 auto; /* 아이템들을 중간에 오도록 해줌. 위 아래는 지정하지 않음 (0)*/
  margin-bottom: calc(var(--padding) / 2);
  /* margin을 bottom보다 위에 썼기 때문에 bottom이 0을 overwriting함 */
  font-size: var(--font-medium);
  color: var(--grey-dark-color);
}

.y_content .action li i.active {
  color: var(--blue-color);
}

/* channel */

.channel {
  display: flex;
  padding: var(--padding);
  justify-content: space-between;
  /* 위 아래 선 만들기 */
  border-top: 1px solid var(--grey-light-color);
  border-bottom: 1px solid var(--grey-light-color);
}

.channel .channelmeta {
  display: flex;
  align-items: center;
}

.channel .channelmeta img {
  width: var(--avatar-padding);
  height: var(--avatar-padding);
  border-radius: 50%;
}

.channel .channelmeta .info {
  display: flex;
  flex-direction: column;
  margin-left: calc(var(--padding) / 2);
}

.info .name {
  font-size: var(--font-medium);
  margin-bottom: 2px;
}

.info .subscriber {
  font-size: var(--font-small);
  color: var(--grey-dark-color);
}

.channel .subscribe {
  font-size: var(--font-medium);
  color: var(--red-color);
  /* text-transform: uppercase;  소문자들을 모두 대문자로 바꿔줌 */
}

/* next */

.y_next {
  padding: var(--padding);
}

.y_next > .next {
  /* .next가 밑에 다른 것들도 가지고 있음. 오로지 .y_next의 바로 자식인 .next만 꾸며주기 위해서 '>'사용 */
  font-size: var(--font-medium);
  color: var(--grey-dark-color);
  margin-bottom: calc(var(--padding) / 2);
}

.y_next .item {
  display: flex;
}

.item img {
  flex: 1 1 35%; /* 줄어들때 늘어날때 1, basis는 35% */
  /* 그러나 바로 말을 듣지 않음. 이는 이미지가 반응형이 아니기 때문 */
}

.item .info {
  flex: 1 1 60%;
}

.item .mreBtn {
  float: 1 1 5%;
}
